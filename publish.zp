(load "mustache/mustache")
(load "pandoc/pandoc")

(import-all "mustache")
(import-all "pandoc")

(define tpl (read-contents "layout.html"))

(define (output-file file)
  (++ "rendered/" (regex:sub r/.md$/ "" file) ".html"))

(define (file-to-title file)
  (regex:gsub r/_/ " " (regex:sub r/.md$/ "" file)))

(define (render target)
  (let ((str (read-contents target))
        (args (make-hash "post" (pandoc:convert "markdown" "html" str)
                         "title" (file-to-title target))))
    (with-output-file (output-file target)
      (curry write (mustache:template tpl args)))))

(let ((target (get-from zepto:args 0)))
  (if (nil? target)
    (write "Please provide a target to render")
    (render target)))
