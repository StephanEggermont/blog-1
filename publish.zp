(load "mustache/mustache")
(load "pandoc/pandoc")
(load "datetime/datetime")

(import-all "mustache")
(import-all "pandoc")
(import-all "datetime" "dt")

(define tpl (read-contents "layout.html"))

(define (from-path file)
  (regex:sub r/.md$/ "" (list:last (string:split file "/"))))

(define (output-file file)
  (++ (from-path file) ".html"))

(define (file-to-title file)
  (regex:gsub r/_/ " " (from-path file)))

(define (time-fmt t)
  (++ (->string (t "month")) "/" (->string (t "day")) "/" (->string (t "year"))))

(define (render target)
  (let* ((str (read-contents target))
         (args (make-hash "post" (pandoc:convert "markdown" "html" str)
                          ;"date" (|> unix-timestamp car dt:from-unix-timestamp
                          ;           time-fmt)
                          "title" (file-to-title target))))
    (with-output-file (output-file target)
      (curry write (mustache:template tpl args)))))

(let ((target (get-from zepto:args 0)))
  (if (nil? target)
    (write "Please provide a target to render")
    (render target)))
